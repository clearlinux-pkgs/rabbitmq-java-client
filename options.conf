[package]
name = rabbitmq-java-client
url = https://github.com/rabbitmq/rabbitmq-java-client/archive/v5.7.0.tar.gz
archives = https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.14/rabbitmq-server-generic-unix-3.7.14.tar.xz deps/rabbit/ https://github.com/rabbitmq/rabbitmq-ct-helpers/archive/rabbitmq_v3_6_14.tar.gz deps/rabbitmq_ct_helpers/ https://github.com/rabbitmq/rabbitmq-codegen/archive/v3.7.14.tar.gz deps/rabbitmq_codegen https://github.com/rabbitmq/rabbitmq-cli/archive/v3.7.15-beta.1.tar.gz deps/rabbitmq_cli https://github.com/rabbitmq/rabbitmq-common/archive/v3.8.0-beta.4.tar.gz deps/rabbit_common https://github.com/DeadZen/goldrush/archive/0.2.0.tar.gz deps/goldrush https://github.com/inaka/elvis.mk/archive/1.0.0.tar.gz deps/elvis_mk https://github.com/rebar/rebar/archive/2.6.4.tar.gz deps/rabbit/.erlang.mk/rebar https://github.com/schlagert/syslog/archive/3.4.5.tar.gz deps/syslog
giturl = https://github.com/rabbitmq/rabbitmq-java-client.git

[autospec]
# build 32 bit libraries
32bit = false
# allow package to build with test failures
allow_test_failures = false
# unset %build ld_as_needed variable
asneeded = false
# this package is trusted enough to automatically update (used by other tools)
autoupdate = false
# extend flags with '-std=gnu++98
broken_c++ = false
# disable parallelization during build
broken_parallel_build = false
# this package is a library compatability package and only ships versioned library files
compat = false
# set conservative build flags
conservative_flags = false
# dev package requires the extras to be installed
dev_requires_extras = false
# pass -ffast-math to compiler
fast-math = false
# optimize build for speed over size
funroll-loops = false
# set flags to smallest -02 flags possible
insecure_build = false
# do not remove static libraries
keepstatic = false
# do not require autostart subpackage
no_autostart = false
# disable stripping binaries
nostrip = false
# optimize build for size over speed
optimize_size = false
# set profile for pgo
pgo = false
# set flags for security-sensitive builds
security_sensitive = false
# do not run test suite
skip_tests = false
# add .so files to the lib package instead of dev
so_to_lib = false
# configure build for avx2
use_avx2 = false
# configure build for avx512
use_avx512 = false
# add clang flags
use_clang = false
# configure build for lto
use_lto = false
# require package verification for build
verify_required = false

